{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet StudentService = class StudentService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.isStudentLoggedIn = new BehaviorSubject(false);\n  }\n  studentSignUp(data) {\n    this.http.post(\"http://localhost:3000/studentsignup\", data, {\n      observe: \"response\"\n    }).subscribe(result => {\n      this.isStudentLoggedIn.next(true);\n      this.router.navigate(['StudentHome']);\n      console.warn(\"Result \", result);\n    });\n    return false;\n  }\n};\nStudentService = __decorate([Injectable({\n  providedIn: 'root'\n})], StudentService);\nexport { StudentService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAG1C,SAASC,eAAe,QAAQ,MAAM;AAK/B,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,IAAgB,EAAUC,MAAa;IAAvC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IADlD,sBAAiB,GAAE,IAAIJ,eAAe,CAAU,KAAK,CAAC;EACO;EAC/DK,aAAa,CAACC,IAAY;IAExB,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,qCAAqC,EACpDD,IAAI,EACJ;MAACE,OAAO,EAAE;IAAU,CAAC,CAAC,CAACC,SAAS,CAAEC,MAAM,IAAG;MACzC,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;MACjC,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrCC,OAAO,CAACC,IAAI,CAAE,SAAS,EAACL,MAAM,CAAC;IACjC,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;CACD;AAfYT,cAAc,eAH1BF,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,GACWf,cAAc,CAe1B;SAfYA,cAAc","names":["Injectable","BehaviorSubject","StudentService","constructor","http","router","studentSignUp","data","post","observe","subscribe","result","isStudentLoggedIn","next","navigate","console","warn","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\CRUD\\CRUD\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { Signup } from '../data-type';\nimport { BehaviorSubject } from 'rxjs';\nimport {Router} '@cliangular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n    isStudentLoggedIn= new BehaviorSubject<boolean>(false)\n  constructor(private http: HttpClient, private router:Router) { }\n  studentSignUp(data :Signup)\n  {\n    this.http.post(\"http://localhost:3000/studentsignup\", \n    data, \n    {observe: \"response\"}).subscribe((result)=>{\n      this.isStudentLoggedIn.next(true);\n      this.router.navigate(['StudentHome']);\n      console.warn (\"Result \",result);\n    });\n    \n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/student.service\";\nexport class AuthGuard {\n  constructor(studentservice) {\n    this.studentservice = studentservice;\n  }\n  canActivate(route, state) {\n    return false;\n  }\n  canActivateChild(childRoute, state) {\n    return this.studentservice.isStudentLoggedIn;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.StudentService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EACjC;EACDC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,OAAO,KAAK;EACd;EACAC,gBAAgB,CACdC,UAAkC,EAClCF,KAA0B;IAC1B,OAAO,IAAI,CAACH,cAAc,CAACM,iBAAiB;EAC9C;;AAZWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","studentservice","canActivate","route","state","canActivateChild","childRoute","isStudentLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\CRUD\\CRUD\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StudentService } from './services/student.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private studentservice: StudentService)\n  {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return false;\n  }\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.studentservice.isStudentLoggedIn;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}